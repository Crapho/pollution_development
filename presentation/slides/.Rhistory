library(png)
library(sf)
library(sp)
library(tidyverse)
library(gganimate)
library(transformr)
library(gifski)
library(ggthemes)
library(scales)
library(RColorBrewer)
library(kableExtra)
library(ggpubr)
library(rticles)
library(stats)
library(broom)
library(extrafont)
library(fixest)
library(modelsummary)
library(openxlsx)
library(raster)
library(lubridate)
library(icons)
library(png)
loadfonts()  # Must be run once in each session (markdown is a new "session" each time you render/knit)
# Sets wd to folder this script is in so we can create relative paths instead of absolute paths
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# We want to get the wd up to the main folder
# Need to go up three levels
setwd('..')
setwd('..')
setwd('..')
# Double check
getwd()    # check
reportP <- function(pValue){
if (pValue < 0.001){
result <- "p < 0.001"
} else {
result <- sprintf("p = %.3f", pValue) # inserts a float into a string and simultaneously do rounding
}
return(result)
}
reportDec <- function(dec){
result <- sprintf("%.3f", dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
reportDecOne <- function(dec){
result <- sprintf("%.1f", dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
reportPercent <- function(dec){
result <- sprintf("%.1f", 100*dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
commaNum <- function(large){
result <- formatC(large, big.mark = ",")
return(result)
}
# Shapefile of india
india_shape <- read_sf("data/spatial/shapefiles/state.shp")
# Coal plants
### Load raw data ----------------------------------------------------------------------------------
plants <- read.xlsx("data/raw/coal_plants.xlsx", sheet = "Units")
# India only
plants <- plants %>% filter(Country=="India")
# Also want only things with a non-missing year
plants <- plants %>% filter(is.na(Year)==F)
# Just keep what we want
plants <- plants %>% dplyr::select(plant_id = ParentID,
unit_id = Tracker.ID,
capacity = `Capacity.(MW)`,
year_built = Year,
year_retired = RETIRED,
lat = Latitude,
lon = Longitude)
plants <- plants %>% mutate(capacity = capacity/1000)
# long
plantsyearly <- c()
for (year in 1990:2015){
plantstemp <- plants %>% filter(year_built<=year & (year_retired>year | is.na(year_retired)==TRUE))
plantstemp <- plantstemp %>%
group_by(plant_id) %>%
mutate(capacity = sum(capacity)) %>%
filter(row_number()==1) %>%
ungroup() %>%
dplyr::select(plant_id, capacity, lat, lon)
plantstemp$year <- year
plantsyearly <- rbind(plantsyearly, plantstemp)
}
# Wind example
# district
districts <- read_sf(paste0("data/spatial/districts/districts.shp"))
districts <- districts %>%
dplyr::select(state = ST_CEN_CD, district = DT_CEN_CD, state_name = ST_NM, district_name = DISTRICT)
districts <- districts %>% filter(state=="23" & district=="07")
# Villages
villages <- read_sf(paste0("data/spatial/villages_overlap/villages_overlap.shp"))
villages <- villages %>% mutate(shrid = paste0(pc11_s_id, "-", pc11_tv_id)) %>%
dplyr::select(shrid, state = ST_CEN_CD, district = DT_CEN_CD, state_name = ST_NM, district_name = DISTRICT)
villages <- villages %>% filter(state=="23" & district=="07")
# Go through two months worth of days
date <- as_date("2010-01-01")
villageswind <- c()
for (add_day in 1:100){
wind <- read_csv(paste0("data/clean/wind_ntl/days/date_2010-", month(date), "-", day(date), ".csv")) %>% as_tibble()
wind <- wind[,1:2]
colnames(wind) <- c("shrid", "indicator")
villagestemp <- villages %>% left_join(wind, by = "shrid")
villagestemp$date <- date
villageswind <- rbind(villageswind, villagestemp)
date <- date + 1
}
villageswind <- villageswind %>% st_set_crs(st_crs(districts))
# Tables
plantresultstable <- readRDS("pollution_development/draft/tables/plantresultstable.rds")
pollutiontable <- readRDS("pollution_development/draft/tables/pollutiontable.rds")
yieldtable <- readRDS("pollution_development/draft/tables/yieldtable.rds")
yieldtablepm <- readRDS("pollution_development/draft/tables/yieldtablepm.rds")
yieldtabletwo <- readRDS("pollution_development/draft/tables/yieldtabletwo.rds")
yieldtablehet <- readRDS("pollution_development/draft/tables/yieldtablehet.rds")
pmeffects <- readRDS("pollution_development/draft/tables/yieldtablePM.rds")
labortable <- readRDS("pollution_development/draft/tables/labortable.rds")
labortablemonsoon <- readRDS("pollution_development/draft/tables/labortablemonsoon.rds")
labortablewinter <- readRDS("pollution_development/draft/tables/labortablewinter.rds")
labortableold <- readRDS("pollution_development/draft/tables/labortableold.rds")
ntltable <- readRDS("pollution_development/draft/tables/ntltable.rds")
yieldtableleads <- readRDS("pollution_development/draft/tables/yieldtableleads.rds")
yieldtablepostplant <- readRDS("pollution_development/draft/tables/yieldtablepostplant.rds")
laborplot <- readRDS("pollution_development/draft/tables/laborplot.rds")
energygraph <- readPNG("pollution_development/draft/tables/energy.png")
energygraph
plot(energygraph)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(sf)
library(sp)
library(tidyverse)
library(gganimate)
library(transformr)
library(gifski)
library(ggthemes)
library(scales)
library(RColorBrewer)
library(kableExtra)
library(ggpubr)
library(rticles)
library(stats)
library(broom)
library(extrafont)
library(fixest)
library(modelsummary)
library(openxlsx)
library(raster)
library(lubridate)
library(icons)
library(png)
loadfonts()  # Must be run once in each session (markdown is a new "session" each time you render/knit)
# Sets wd to folder this script is in so we can create relative paths instead of absolute paths
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# We want to get the wd up to the main folder
# Need to go up three levels
setwd('..')
setwd('..')
setwd('..')
# Double check
getwd()    # check
reportP <- function(pValue){
if (pValue < 0.001){
result <- "p < 0.001"
} else {
result <- sprintf("p = %.3f", pValue) # inserts a float into a string and simultaneously do rounding
}
return(result)
}
reportDec <- function(dec){
result <- sprintf("%.3f", dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
reportDecOne <- function(dec){
result <- sprintf("%.1f", dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
reportPercent <- function(dec){
result <- sprintf("%.1f", 100*dec) # inserts a float into a string and simultaneously do rounding
return(result)
}
commaNum <- function(large){
result <- formatC(large, big.mark = ",")
return(result)
}
# Shapefile of india
india_shape <- read_sf("data/spatial/shapefiles/state.shp")
# Coal plants
### Load raw data ----------------------------------------------------------------------------------
plants <- read.xlsx("data/raw/coal_plants.xlsx", sheet = "Units")
# India only
plants <- plants %>% filter(Country=="India")
# Also want only things with a non-missing year
plants <- plants %>% filter(is.na(Year)==F)
# Just keep what we want
plants <- plants %>% dplyr::select(plant_id = ParentID,
unit_id = Tracker.ID,
capacity = `Capacity.(MW)`,
year_built = Year,
year_retired = RETIRED,
lat = Latitude,
lon = Longitude)
plants <- plants %>% mutate(capacity = capacity/1000)
# long
plantsyearly <- c()
for (year in 1990:2015){
plantstemp <- plants %>% filter(year_built<=year & (year_retired>year | is.na(year_retired)==TRUE))
plantstemp <- plantstemp %>%
group_by(plant_id) %>%
mutate(capacity = sum(capacity)) %>%
filter(row_number()==1) %>%
ungroup() %>%
dplyr::select(plant_id, capacity, lat, lon)
plantstemp$year <- year
plantsyearly <- rbind(plantsyearly, plantstemp)
}
# Wind example
# district
districts <- read_sf(paste0("data/spatial/districts/districts.shp"))
districts <- districts %>%
dplyr::select(state = ST_CEN_CD, district = DT_CEN_CD, state_name = ST_NM, district_name = DISTRICT)
districts <- districts %>% filter(state=="23" & district=="07")
# Villages
villages <- read_sf(paste0("data/spatial/villages_overlap/villages_overlap.shp"))
villages <- villages %>% mutate(shrid = paste0(pc11_s_id, "-", pc11_tv_id)) %>%
dplyr::select(shrid, state = ST_CEN_CD, district = DT_CEN_CD, state_name = ST_NM, district_name = DISTRICT)
villages <- villages %>% filter(state=="23" & district=="07")
# Go through two months worth of days
date <- as_date("2010-01-01")
villageswind <- c()
for (add_day in 1:100){
wind <- read_csv(paste0("data/clean/wind_ntl/days/date_2010-", month(date), "-", day(date), ".csv")) %>% as_tibble()
wind <- wind[,1:2]
colnames(wind) <- c("shrid", "indicator")
villagestemp <- villages %>% left_join(wind, by = "shrid")
villagestemp$date <- date
villageswind <- rbind(villageswind, villagestemp)
date <- date + 1
}
villageswind <- villageswind %>% st_set_crs(st_crs(districts))
# Tables
plantresultstable <- readRDS("pollution_development/draft/tables/plantresultstable.rds")
pollutiontable <- readRDS("pollution_development/draft/tables/pollutiontable.rds")
yieldtable <- readRDS("pollution_development/draft/tables/yieldtable.rds")
yieldtablepm <- readRDS("pollution_development/draft/tables/yieldtablepm.rds")
yieldtabletwo <- readRDS("pollution_development/draft/tables/yieldtabletwo.rds")
yieldtablehet <- readRDS("pollution_development/draft/tables/yieldtablehet.rds")
pmeffects <- readRDS("pollution_development/draft/tables/yieldtablePM.rds")
labortable <- readRDS("pollution_development/draft/tables/labortable.rds")
labortablemonsoon <- readRDS("pollution_development/draft/tables/labortablemonsoon.rds")
labortablewinter <- readRDS("pollution_development/draft/tables/labortablewinter.rds")
labortableold <- readRDS("pollution_development/draft/tables/labortableold.rds")
ntltable <- readRDS("pollution_development/draft/tables/ntltable.rds")
yieldtableleads <- readRDS("pollution_development/draft/tables/yieldtableleads.rds")
yieldtablepostplant <- readRDS("pollution_development/draft/tables/yieldtablepostplant.rds")
laborplot <- readRDS("pollution_development/draft/tables/laborplot.rds")
~[image info]("../../../pollution_development/draft/tables/energy.png")
# Table
colnames(yieldtablepm) <- c("(1)", "(2)", "(3)", "(4)", "(5)")
kable(
yieldtablepm[-c(3:6),],
align = "ccccc", booktabs = TRUE, linesep = ""
) %>%
# footnote(
#          "Note: Standard errors are in parentheses and are clustered at the village level. * p<0.10 ** p<0.05 *** p<0.01",
#          general_title = "",
#          threeparttable = TRUE,
#          footnote_as_chunk = TRUE
#          ) %>%
column_spec(1, width = "3cm") %>%
column_spec(c(2:6),width = "2cm") %>%
row_spec(7, bold = TRUE) %>%
row_spec(11, hline_after = TRUE) %>%
add_header_above(c(" ", "all" = 3, "monsoon" = 1, "winter" = 1)) %>%
kable_classic_2()
kable(
yieldtablepm[-c(3:6),],
align = "ccccc", booktabs = TRUE, linesep = ""
) %>%
# footnote(
#          "Note: Standard errors are in parentheses and are clustered at the village level. * p<0.10 ** p<0.05 *** p<0.01",
#          general_title = "",
#          threeparttable = TRUE,
#          footnote_as_chunk = TRUE
#          ) %>%
column_spec(1, width = "3cm") %>%
column_spec(c(2:6),width = "2cm") %>%
row_spec(6, bold = TRUE) %>%
row_spec(10, hline_after = TRUE) %>%
add_header_above(c(" ", "all" = 3, "monsoon" = 1, "winter" = 1)) %>%
kable_classic_2()
kable(
yieldtablepm[-c(3:6),],
align = "ccccc", booktabs = TRUE, linesep = ""
) %>%
# footnote(
#          "Note: Standard errors are in parentheses and are clustered at the village level. * p<0.10 ** p<0.05 *** p<0.01",
#          general_title = "",
#          threeparttable = TRUE,
#          footnote_as_chunk = TRUE
#          ) %>%
column_spec(1, width = "3cm") %>%
column_spec(c(2:6),width = "2cm") %>%
row_spec(3, bold = TRUE) %>%
row_spec(7, hline_after = TRUE) %>%
add_header_above(c(" ", "all" = 3, "monsoon" = 1, "winter" = 1)) %>%
kable_classic_2()
install.packages("xaringan")
emotes::install_github('yihui/xaringan')
remotes::install_github('yihui/xaringan')
install.packages('gganimate')
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages('gganimate')
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "gifski", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
install.packages("transformr", "ggthemes", "scales", "RColorBrewer", "kabelExtra", "ggpubr", "rticles", "stats", "broom", "extrafont", "fixest", "modelsummary", "openxlsx", "raster", "lubridate", "icons", "png")
